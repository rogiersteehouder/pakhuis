{
	email <email>
	log default {
		output file /caddy/log/caddy.log {
			roll_size 5MiB
		}
		format json {
			time_format iso8601
		}
		exclude http.log.access
	}
	log access {
		output file /caddy/log/caddy-acccess.log {
			roll_size 5MiB
		}
		format json {
			time_format iso8601
		}
		include http.log.access
	}
}

(auth) {
	basicauth {
		# bcrypt generated by:
		# > caddy hash-password
		test $2a$14$1lGnaCItJ4ejsmdkEe.yrOBdg/oIE6j4h/FJnJHH.vVCdMRSC.JEi
	}
}

example.org {
	log
	import auth	# public interface uses auth

	handle_path /pakhuis/* {
		reverse_proxy pakhuis:80 {
			# put authenticated username in http header
			header_up Caddy-Auth-User {http.auth.user.id}
		}
	}

	respond "Caddy works, {http.auth.user.id}."
}

localhost {
	log
	# import auth	# local interface without auth

	handle_path /pakhuis/* {
		reverse_proxy pakhuis:80 {
			header_up Caddy-Auth-User localhost
		}
	}

	# local interface can get the access log
	handle /log/access {
		root * /caddy/log
		rewrite * /caddy-acccess.log
		file_server
	}

	respond "Caddy works, localhost."
}
